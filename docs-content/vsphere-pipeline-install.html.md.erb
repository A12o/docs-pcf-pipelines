---
title: Using the vSphere Install Pipeline
owner: 
---

## <a id='overview'></a> Overview
Install Pipelines deploy Pivotal Cloud Foundry for the operator’s chosen IaaS.
This documentation describes how to use PCF Pipelines to deploy PCF for vSphere. 
The vSphere Install Pipeline does not provision any infrastructure resources such as networks, load balancers, and databases.

## <a id='config'></a> Pipeline Configuration

The vSphere Install Pipeline consists of a:

+ parameters file (`params.yml`). This file configures the pipeline’s environment variables. 
This file should be stored in a credential management system, such as LastPass or Credhub, because it contains credentials. 

+ pipelines operations file (`pipeline.yml`). This file configures the jobs associated with this Install Pipeline. 
Jobs declare the work associated with a pipeline.
For more information on Jobs, see  the [Jobs](https://concourse.ci/concepts.html#jobs) topic in the Concourse documentation.

This table describes the jobs associated with the vSphere Install Pipeline's `pipeline.yml` file:

<table>
  <tr>
    <th>Job</th>
    <th>Purpose</th>
  </tr>
  <tr> 
    <td><code>deploy-opsman</code></td>
    <td>This job deploys OpsMan.</td>
    <tr>
    <td><code>configure-director</code>
    <td>This job configures Ops Manager Director.</td>
    </tr>
    <tr>
   <td><code>deploy-director</code></td>
   <td>This job deploys the Ops Manager Director.</td>
   </tr>
   <tr>
    <td><code>upload-ert</code></td>
    <td>This job uploads Elastic Runtime.</td>
    </tr>
    <tr>
    <td><code>stage-ert</code></td>
    <td>This job stages Elastic Runtime.</td>
    </tr>
    <td><code>deploy-ert</code></td>
    <td>This job deploys Elastic Runtime.</td>
    <tr>
    <td><code>wipe-env</code></td>
    <td>This job will tear down the Pivotal Cloud Foundry deployment.</td>
    </tr>
  </tr>
</table>
## <a id='usage'></a> Installing PCF on vSphere
1. Log in to the Pivotal Network and download the latest version of **PCF Platform Automation with Concourse (PCF Pipelines)**.
1.	Unzip the TGZ file.
1.	Navigate to the `install-pcf` sub-folder.
1.	Navigate to the the `vspshere` sub-folder.
1.	Edit the `params.yml` file with your infrastructure details.
1.	Log in and target your Concourse server instance:
	`fly --target TARGET login --concourse-url CONCOURSE-URL`</br>
	Where:
	1. `TARGET-NAME`is the target name of your Concourse instance.
	1. `CONCOURSE-URL` is the web address for your Concourse instance. 

1.	Run the following command to set the pipeline:
	<code>fly --target TARGET-NAME set-pipeline --pipeline PIPELINE-NAME --config PIPELINE-NAME/IAAS-NAME/pipeline.yml --load-vars-from PIPELINE-NAME/IAAS-NAME/params.yml</code>
	Where:
	1. `TARGET-NAME`is the target name of your Concourse instance.
	1. `PIPELINE-NAME` is the name of the pipeline in your Concourse instance. 
	1. `IAAS-NAME` is the name of the IaaS, as detailed in the [Currently Supported Pipelines](index.html#support) section of the PCF Pipelines Overview topic. 
1.	Navigate to the pipeline URL and unpause the pipeline through the Concourse user interface. 
You can also unpause the pipeline by running the following command:
	`fly --target TARGET-NAME unpause-pipeline --pipeline PIPELINE-NAME`
	</br>Where:
	1. `TARGET-NAME`is the target name of your Concourse instance.
	1. `PIPELINE-NAME` is the name of the pipeline in your Concourse instance. 

1. 	The first job will either trigger automatically or require manual intervention.

## <a id='troubleshooting'></a> Troubleshooting

**Error Message:**

```
“{”errors”:{“.properties.networking_point_of_entry.external_ssl.ssl_ciphers”:[“Value can’t be blank”]}}” 
```
**Solution:** pcf-pipelines is not compatible with ERT 1.11.14. Redeploy with
   a [compatible](https://github.com/pivotal-cf/pcf-pipelines#install-pcf-pipelines)
   version.


**Error Message:**

```
pcf-pipelines/tasks/stage-product/task.sh: line 19: ./pivnet-product/metadata.json: No such file or directory
```
**Solution:** You are not using the PivNet resource, and are most likely using
  a different repository manager like Artifactory. For more information, and a
  possible workaround, see this github [issue](https://github.com/pivotal-cf/pcf-pipelines/issues/192).
